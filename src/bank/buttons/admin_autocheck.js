/**
 * –ö–Ω–æ–ø–∫–∞ "–ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞"
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ BACKUP_DATA —á–µ—Ä–µ–∑ groupByRecipientWithGifts
 */

(function () {
  'use strict';

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "–ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å"
  if (!document.title.startsWith('–ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å')) {
    return;
  }

  /**
   * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ—Å—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  async function getPostData(post) {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º usr_id –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
    const profileLink = post.querySelector('.pl-email.profile a');
    const profileUrl = profileLink ? new URL(profileLink.href) : null;
    const usr_id = profileUrl ? Number(profileUrl.searchParams.get("id")) || 0 : 0;

    // –ò–∑–≤–ª–µ–∫–∞–µ–º ts –∏–∑ —Ç–µ–≥–∞ <bank_data>
    const bankData = post.querySelector('bank_data');
    const ts = bankData ? Number(bankData.textContent.trim()) || 0 : 0;

    return { usr_id, ts };
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∏
   */
  function formatCheckResult(result) {
    if (!Array.isArray(result) || result.length === 0) {
      return '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏';
    }

    const lines = [];

    result.forEach(recipient => {
      const recipientId = recipient.recipient_id;
      const amount = recipient.amount || 0;
      const items = recipient.items || [];

      lines.push(`\nüìã –ü–æ–ª—É—á–∞—Ç–µ–ª—å usr${recipientId}:`);

      if (amount !== 0) {
        lines.push(`  üí∞ –ë–∞–ª–∞–Ω—Å: ${amount > 0 ? '+' : ''}${amount}`);
      }

      if (items.length > 0) {
        items.forEach(item => {
          const prefix = item.error ? '  ‚ùå' : '  ‚úÖ';

          if (item.remove) {
            // –ö—É–ø–æ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            lines.push(`${prefix} –£–¥–∞–ª–∏—Ç—å –∫—É–ø–æ–Ω: ${item.title || item.form_id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫—É–ø–æ–Ω'}`);
            if (item.error) {
              lines.push(`     ‚ö†Ô∏è –û—à–∏–±–∫–∞: ${item.error}`);
            }
          } else if (item.category) {
            // –ü–æ–¥–∞—Ä–æ–∫/–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
            const categoryName = {
              'gift': '–ü–æ–¥–∞—Ä–æ–∫',
              'icon': '–ò–∫–æ–Ω–∫–∞',
              'plashka': '–ü–ª–∞—à–∫–∞',
              'background': '–§–æ–Ω'
            }[item.category] || item.category;

            lines.push(`${prefix} ${categoryName}: ${item.title || item.form_id || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);

            if (item.custom_title) {
              lines.push(`     üí¨ "${item.custom_title}"`);
            }

            if (item.error) {
              const errorText = {
                'not_selected_custom': '–ù–µ –≤—ã–±—Ä–∞–Ω —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞',
                'not_in_library': '–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ',
                'already_exists': '–≠–ª–µ–º–µ–Ω—Ç —É–∂–µ –µ—Å—Ç—å —É –ø–æ–ª—É—á–∞—Ç–µ–ª—è',
                'coupon_not_exists': '–ö—É–ø–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω —É –ø–æ–ª—É—á–∞—Ç–µ–ª—è'
              }[item.error] || item.error;

              lines.push(`     ‚ö†Ô∏è –û—à–∏–±–∫–∞: ${errorText}`);
            }
          } else {
            // –ü—Ä–æ—á–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            lines.push(`${prefix} ${item.title || item.form_id || '–û–ø–µ—Ä–∞—Ü–∏—è'}`);
            if (item.amount) {
              lines.push(`     üí∞ –°—É–º–º–∞: ${item.amount}`);
            }
            if (item.error) {
              lines.push(`     ‚ö†Ô∏è –û—à–∏–±–∫–∞: ${item.error}`);
            }
          }
        });
      }
    });

    return lines.join('\n');
  }

  /**
   * –°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞
   */
  async function createAutoCheckButtons(opts) {
    const {
      allowedGroups = [],
      allowedForums = [],
      allowedUsers = [],
      label = '–ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞',
      containerSelector = '.ams_info',
      order = 1,
      postSelector = 'div.post',
      showStatus = true,
      showDetails = true,
    } = opts || {};

    console.log(`[adminAutoCheck] "${label}": –í—ã–∑–æ–≤ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:`, { allowedGroups, allowedForums, allowedUsers });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (!document.title.startsWith('–ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å')) {
      console.log(`[adminAutoCheck] "${label}": –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å, –≤—ã—Ö–æ–¥`);
      return;
    }

    // –ñ–¥—ë–º —Å–æ–±—ã—Ç–∏—è gringotts:ready
    if (!window.__gringotts_ready) {
      console.log(`[adminAutoCheck] "${label}": –ñ–¥—ë–º —Å–æ–±—ã—Ç–∏—è gringotts:ready`);
      await new Promise(r => window.addEventListener('gringotts:ready', r, { once: true }));
    } else {
      console.log(`[adminAutoCheck] "${label}": gringotts —É–∂–µ –≥–æ—Ç–æ–≤`);
    }

    const gid = typeof window.getCurrentGroupId === 'function'
      ? window.getCurrentGroupId()
      : NaN;

    console.log(`[adminAutoCheck] "${label}": —Ç–µ–∫—É—â–∞—è –≥—Ä—É–ø–ø–∞ = ${gid}, —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ = [${allowedGroups}]`);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä—É–ø–ø—ã
    if (!Array.isArray(allowedGroups) || allowedGroups.length === 0) {
      console.log(`[adminAutoCheck] "${label}": allowedGroups –ø—É—Å—Ç–æ–π, –≤—ã—Ö–æ–¥`);
      return;
    }
    if (!allowedGroups.map(Number).includes(Number(gid))) {
      console.log(`[adminAutoCheck] "${label}": –≥—Ä—É–ø–ø–∞ ${gid} –Ω–µ –≤ —Å–ø–∏—Å–∫–µ, –≤—ã—Ö–æ–¥`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä—É–º–∞
    if (!Array.isArray(allowedForums) || allowedForums.length === 0) {
      console.log(`[adminAutoCheck] "${label}": allowedForums –ø—É—Å—Ç–æ–π, –≤—ã—Ö–æ–¥`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä—É–º–∞ —á–µ—Ä–µ–∑ isAllowedForum
    const isAllowedForum = (forumIds) => {
      const allow = (forumIds || []).map(String);
      const crumbs = document.querySelector('.container.crumbs');

      const matchIn = (root) => Array.from(root.querySelectorAll('a[href]')).some(a => {
        try {
          const u = new URL(a.getAttribute('href'), location.href);
          if (!u.pathname.includes('viewforum.php')) return false;
          const id = (u.searchParams.get('id') || '').trim();
          return id && allow.includes(id);
        } catch { return false; }
      });

      if (crumbs && matchIn(crumbs)) return true;
      if (matchIn(document)) return true;

      const bodyForumId = document.body?.dataset?.forumId;
      if (bodyForumId && allow.includes(String(bodyForumId))) return true;

      return false;
    };

    if (!isAllowedForum(allowedForums)) {
      console.log(`[adminAutoCheck] "${label}": —Ñ–æ—Ä—É–º –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω, –≤—ã—Ö–æ–¥`);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (Array.isArray(allowedUsers) && allowedUsers.length > 0) {
      const uid = Number(window.UserID);
      console.log(`[adminAutoCheck] "${label}": —Ç–µ–∫—É—â–∏–π UserID = ${uid}, —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ = [${allowedUsers}]`);
      if (!allowedUsers.map(Number).includes(uid)) {
        console.log(`[adminAutoCheck] "${label}": –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${uid} –Ω–µ –≤ —Å–ø–∏—Å–∫–µ, –≤—ã—Ö–æ–¥`);
        return;
      }
    }

    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ—Å—Ç—ã
    const posts = document.querySelectorAll(postSelector);
    console.log(`[adminAutoCheck] "${label}": –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: ${posts.length}`);

    let addedCount = 0;
    for (let index = 0; index < posts.length; index++) {
      const post = posts[index];

      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º topicpost
      if (post.classList.contains('topicpost')) continue;

      const postContent = post.querySelector('.post-content');
      if (!postContent) continue;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ï–°–¢–¨ bank_ams_check, –Ω–æ –ù–ï–¢ bank_ams_done
      const hasAmsCheck = postContent.querySelector('bank_ams_check');
      const hasAmsDone = postContent.querySelector('bank_ams_done');
      if (!hasAmsCheck || hasAmsDone) {
        console.log(`[adminAutoCheck] "${label}": –ü–æ—Å—Ç ${index}: hasAmsCheck=${!!hasAmsCheck}, hasAmsDone=${!!hasAmsDone}, –ø—Ä–æ–ø—É—Å–∫`);
        continue;
      }

      const container = postContent.querySelector(containerSelector);
      if (!container) continue;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ª–∏ —É–∂–µ –∫–Ω–æ–ø–∫–∞
      if (container.querySelector(`[data-post-button-label="${label}"]`)) continue;

      const postData = await getPostData(post);
      console.log(`[adminAutoCheck] "${label}": –ü–æ—Å—Ç ${index}: getPostData –≤–µ—Ä–Ω—É–ª:`, postData);

      const { usr_id, ts } = postData;
      if (!usr_id || !ts) {
        console.log(`[adminAutoCheck] "${label}": –ü–æ—Å—Ç ${index}: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ - usr_id=${usr_id}, ts=${ts}`);
        continue;
      }

      console.log(`[adminAutoCheck] "${label}": –ü–æ—Å—Ç ${index}: –¥–∞–Ω–Ω—ã–µ OK - usr_id=${usr_id}, ts=${ts}`);

      // –°–æ–∑–¥–∞—ë–º UI
      const wrap = document.createElement('div');
      wrap.dataset.order = order;
      wrap.dataset.postButtonLabel = label;

      const btn = document.createElement('button');
      btn.type = 'button';
      btn.className = 'button';
      btn.textContent = label;

      const status = showStatus ? document.createElement('span') : null;
      if (status) {
        status.style.marginLeft = '10px';
        status.style.fontSize = '14px';
        status.style.color = '#555';
      }

      const details = showDetails ? document.createElement('details') : null;
      let pre = null;
      if (details) {
        details.style.marginTop = '6px';
        const summary = document.createElement('summary');
        summary.textContent = '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏';
        summary.style.cursor = 'pointer';
        pre = document.createElement('pre');
        pre.style.whiteSpace = 'pre-wrap';
        pre.style.margin = '6px 0 0';
        pre.style.fontSize = '12px';
        details.appendChild(summary);
        details.appendChild(pre);
      }

      wrap.appendChild(btn);
      if (status) wrap.appendChild(status);
      if (details) wrap.appendChild(details);

      // –í—Å—Ç–∞–≤–∫–∞ –ø–æ order
      const siblings = Array.from(container.querySelectorAll('div[data-order]'));
      const next = siblings.find(el => Number(el.dataset.order) > Number(order));
      if (next) container.insertBefore(wrap, next);
      else container.appendChild(wrap);

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
      btn.addEventListener('click', async () => {
        console.log(`[adminAutoCheck] –ù–∞—á–∞–ª–æ –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è usr_id=${usr_id}, ts=${ts}`);
        if (status) {
          status.textContent = '–ü—Ä–æ–≤–µ—Ä—è—é‚Ä¶';
          status.style.color = '#555';
        }
        if (pre) pre.textContent = '';

        try {
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ storage
          if (!window.FMVbank || typeof window.FMVbank.storageGet !== 'function') {
            throw new Error('FMVbank.storageGet –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
          }

          const current_storage = await window.FMVbank.storageGet(usr_id, 'fmv_bank_info_');
          const BACKUP_DATA = current_storage[ts];

          if (!BACKUP_DATA) {
            throw new Error('BACKUP_DATA –Ω–µ –Ω–∞–π–¥–µ–Ω');
          }

          console.log('[adminAutoCheck] BACKUP_DATA:', BACKUP_DATA);

          // –í—ã–∑—ã–≤–∞–µ–º groupByRecipientWithGifts
          if (typeof window.groupByRecipientWithGifts !== 'function') {
            throw new Error('–§—É–Ω–∫—Ü–∏—è groupByRecipientWithGifts –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
          }

          const result = await window.groupByRecipientWithGifts(BACKUP_DATA);
          console.log('[adminAutoCheck] –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:', result);

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏
          let hasErrors = false;
          if (Array.isArray(result)) {
            for (const recipient of result) {
              if (Array.isArray(recipient.items)) {
                for (const item of recipient.items) {
                  if (item.error) {
                    hasErrors = true;
                    break;
                  }
                }
              }
              if (hasErrors) break;
            }
          }

          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
          if (status) {
            if (hasErrors) {
              status.textContent = '‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏';
              status.style.color = 'orange';
            } else {
              status.textContent = '‚úÖ –û–ö';
              status.style.color = 'green';
            }
          }

          // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏
          if (pre) {
            pre.textContent = formatCheckResult(result);
          }

          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏
          if (hasErrors && details) {
            details.open = true;
          }

        } catch (err) {
          if (status) {
            status.textContent = '‚úñ –û—à–∏–±–∫–∞';
            status.style.color = 'red';
          }
          if (pre) pre.textContent = (err && err.message) ? err.message : String(err);
          console.error('[adminAutoCheck] –û—à–∏–±–∫–∞:', err);
        }
      });

      addedCount++;
    }

    console.log(`[adminAutoCheck] "${label}": –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–Ω–æ–ø–æ–∫: ${addedCount}`);
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

  async function init() {
    await createAutoCheckButtons({
      allowedGroups: (window.BANK_CHECK?.GroupID) || [],
      allowedForums: (window.BANK_CHECK?.ForumID) || [],
      allowedUsers: (window.BANK_CHECK?.UserID) || [],
      label: '–ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞',
      order: 1, // –ü–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π "–í–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏" (order: 2)
      containerSelector: '.ams_info',
      postSelector: 'div.post',
    });
  }

  // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
  window.addEventListener('bank:buttons:refresh', () => {
    console.log('[adminAutoCheck] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ bank:buttons:refresh, –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏');
    init();
  });

  // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
  window.createAutoCheckButtons = createAutoCheckButtons;
})();
