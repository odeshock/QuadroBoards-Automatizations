// admin_bridge_api.js ‚Äî –∑–∞–≥—Ä—É–∑–∫–∞/—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü
// –≠–∫—Å–ø–æ—Ä—Ç: window.skinAdmin.load(userId) -> { status, initialHtml, save(newHtml), targetUserId }

(function () {
  'use strict';

  console.log('[admin_bridge_api] –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è —Å API');

  // –ù–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å
  if (window.skinAdmin && window.skinAdmin.__apiVersion) {
    console.log('[admin_bridge_api] –£–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    return;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç user_id –∏–∑ .modal_script
   * –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: data-main-user_id > data-id
   */
  function getUserIdFromPage(fallbackUserId) {
    const modal = document.querySelector('.modal_script[data-id]');
    if (modal) {
      const mainUserId = modal.getAttribute('data-main-user_id');
      if (mainUserId && mainUserId.trim()) {
        return Number(mainUserId.trim());
      }
      const dataId = modal.getAttribute('data-id');
      if (dataId && dataId.trim()) {
        return Number(dataId.trim());
      }
    }
    return fallbackUserId ? Number(fallbackUserId) : null;
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ API –¥–ª—è –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
   */
  async function loadAllDataFromAPI(userId) {
    console.log('[admin_bridge_api] –ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ API –¥–ª—è userId:', userId);

    if (!window.FMVbank || typeof window.FMVbank.storageGet !== 'function') {
      throw new Error('FMVbank.storageGet –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    const result = {
      icon: [],
      plashka: [],
      background: [],
      gift: [],
      coupon: []
    };

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –µ–¥–∏–Ω—ã–π –æ–±—ä–µ–∫—Ç info_<userId>
      const response = await window.FMVbank.storageGet(userId, 'info_');
      console.log('[admin_bridge_api] info_ –æ—Ç–≤–µ—Ç:', response);

      if (!response || typeof response !== 'object') {
        console.warn('[admin_bridge_api] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ info_ –¥–ª—è userId:', userId);
        return result;
      }

      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –µ–¥–∏–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
      const categories = ['icon', 'plashka', 'background', 'gift', 'coupon'];

      for (const key of categories) {
        const items = response[key];
        if (Array.isArray(items)) {
          result[key] = items;
          console.log(`[admin_bridge_api] ${key} –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${items.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
        } else {
          console.warn(`[admin_bridge_api] ${key} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –º–∞—Å—Å–∏–≤`);
        }
      }

    } catch (e) {
      console.error('[admin_bridge_api] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
    }

    console.log('[admin_bridge_api] –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', result);
    return result;
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ API (–µ–¥–∏–Ω—ã–π –æ–±—ä–µ–∫—Ç info_<userId>)
   * –í–ê–ñ–ù–û: –°–Ω–∞—á–∞–ª–∞ –¥–µ–ª–∞–µ—Ç GET, –∑–∞—Ç–µ–º —á–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ
   */
  async function saveAllDataToAPI(userId, jsonData) {
    console.log('[admin_bridge_api] –°–æ—Ö—Ä–∞–Ω—è—é –¥–∞–Ω–Ω—ã–µ –≤ API –¥–ª—è userId:', userId, jsonData);

    if (!window.FMVbank || typeof window.FMVbank.storageGet !== 'function' || typeof window.FMVbank.storageSet !== 'function') {
      throw new Error('FMVbank.storageGet –∏–ª–∏ storageSet –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

    try {
      // –®–ê–ì 1: –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API
      console.log('[admin_bridge_api] üì• –ó–∞–≥—Ä—É–∂–∞—é —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API...');
      const currentData = await window.FMVbank.storageGet(userId, 'info_');

      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
      const baseData = currentData && typeof currentData === 'object' ? currentData : {};

      console.log('[admin_bridge_api] üì• –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API:', JSON.parse(JSON.stringify(baseData)));

      // –®–ê–ì 2: –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–∫–∏–Ω–æ–≤, —Å–æ—Ö—Ä–∞–Ω—è—è chrono –∏ comment_id
      baseData.icon = jsonData.icon || [];
      baseData.plashka = jsonData.plashka || [];
      baseData.background = jsonData.background || [];
      baseData.gift = jsonData.gift || [];
      baseData.coupon = jsonData.coupon || [];

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º chrono –∏ comment_id, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
      if (!baseData.chrono) baseData.chrono = {};
      if (!baseData.comment_id) baseData.comment_id = null;

      // –®–ê–ì 3: –û–±–Ω–æ–≤–ª—è–µ–º last_timestamp
      baseData.last_timestamp = Math.floor(Date.now() / 1000);

      console.log('[admin_bridge_api] üì§ –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', JSON.parse(JSON.stringify(baseData)));

      // –®–ê–ì 4: –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
      const result = await window.FMVbank.storageSet(baseData, userId, 'info_');

      console.log('[admin_bridge_api] ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', result);
      return result === true;

    } catch (e) {
      console.error('[admin_bridge_api] ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', e);
      return false;
    }
  }

  async function loadSkinAdmin(userId) {
    console.log('[admin_bridge_api] loadSkinAdmin –≤—ã–∑–≤–∞–Ω –¥–ª—è userId:', userId);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π userId (—Å —É—á—ë—Ç–æ–º data-main-user_id)
    const targetUserId = getUserIdFromPage(userId) || Number(userId);
    console.log('[admin_bridge_api] –¶–µ–ª–µ–≤–æ–π userId:', targetUserId);

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API
      const jsonData = await loadAllDataFromAPI(targetUserId);

      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º JSON –≤ HTML –¥–ª—è –ø–∞–Ω–µ–ª–µ–π
      let initialHtml = '';
      if (window.FMV && typeof window.FMV.parseJsonToHtml === 'function') {
        initialHtml = window.FMV.parseJsonToHtml(jsonData);
        console.log('[admin_bridge_api] HTML –ø–æ—Å—Ç—Ä–æ–µ–Ω –∏–∑ JSON, –¥–ª–∏–Ω–∞:', initialHtml.length);
      } else {
        console.warn('[admin_bridge_api] FMV.parseJsonToHtml –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      async function save(newHtml) {
        console.log('[admin_bridge_api] save() –≤—ã–∑–≤–∞–Ω, HTML –¥–ª–∏–Ω–∞:', newHtml.length);

        // –ü–∞—Ä—Å–∏–º HTML –≤ JSON
        let jsonData;
        if (window.FMV && typeof window.FMV.parseHtmlToJson === 'function') {
          jsonData = window.FMV.parseHtmlToJson(newHtml);
          console.log('[admin_bridge_api] HTML —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω –≤ JSON:', jsonData);
        } else {
          console.error('[admin_bridge_api] FMV.parseHtmlToJson –Ω–µ –Ω–∞–π–¥–µ–Ω');
          return { ok: false, status: '–æ—à–∏–±–∫–∞: –ø–∞—Ä—Å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω' };
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ API
        const success = await saveAllDataToAPI(targetUserId, jsonData);

        return {
          ok: success,
          status: success ? '—É—Å–ø–µ—à–Ω–æ' : '–æ—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'
        };
      }

      return {
        status: 'ok',
        initialHtml,
        save,
        targetUserId
      };

    } catch (e) {
      console.error('[admin_bridge_api] –û—à–∏–±–∫–∞:', e);
      return {
        status: '–æ—à–∏–±–∫–∞: ' + (e.message || String(e))
      };
    }
  }

  window.skinAdmin = {
    load: loadSkinAdmin,
    __apiVersion: true
  };

  console.log('[admin_bridge_api] –ó–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤');
})();
